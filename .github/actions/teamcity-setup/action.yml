name: TeamCity Setup
runs:
  using: composite
  steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # По умолчанию в ubuntu отсуствуе команда ifconfig
    - name: Install ifconfig
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y net-tools

    # Команда для определения ip адреса для обращения из другого контейнера в документации Selenoid UI: https://aerokube.com/selenoid-ui/latest/
    - name: Set up host environment variable
      shell: bash
      run: |
        echo "HOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)" >> $GITHUB_ENV

    # jq is not pre-installed on ubuntu-latest in GitHub Actions
    - name: Install jq
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Set up host appsettings.json property
      shell: bash
      run: |
        jq '.host = env.HOST' TeamcityTestingFramework/appsettings.json > temp.json && mv temp.json TeamcityTestingFramework/appsettings.json
      env:
        HOST: ${{ env.HOST }}

    - name: Cat appsettings.json
      shell: bash
      run: cat TeamcityTestingFramework/appsettings.json

    - name: Run Selenium Grid
     # Флаг -d запускает контейнер в фоновом режиме, если мы этого не сделаем, мы никогда не перейдем к следующему степу
      shell: bash
      run: docker run -d -p 4444:4444 --shm-size="2g" -e SE_NODE_GRID_URL="http://localhost:4444" selenium/standalone-chromium:latest

    - name: Run TeamCity Server
      shell: bash
      # Флаг -u 0 запускает контейнер от имени root, чтобы был доступ к записи файлов в директории, которые указаны в volume.
      run: |
        docker run -u 0 -d --name teamcity-server  \
        -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
        -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs  \
        -p 8111:8111 \
        jetbrains/teamcity-server:2023.11.1     

    - name: Build & Install
      shell: bash
      run: dotnet build

    - name: Ensure browsers are installed
      shell: bash
      run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps chromium

    - name: Setup TeamCity server
      shell: bash
      run: |
        export SELENIUM_REMOTE_URL="http://${{ env.HOST }}:4444"
        echo "SELENIUM_REMOTE_URL=$SELENIUM_REMOTE_URL"
        dotnet test --filter "FullyQualifiedName~Tests.UI&Category=SetupServerTest"
      env:
        HOST: ${{ env.HOST }}

    - name: Setup superUserToken environment variable
      shell: bash
      run: echo "SUPER_USER_TOKEN=$(docker logs teamcity-server | grep 'Super user authentication token' | tail -n 1 | awk '{print $6}')" >> $GITHUB_ENV

    - name: Set up superUserToken appsettings.json property
      shell: bash
      run: jq '.superUserToken = env.SUPER_USER_TOKEN' TeamcityTestingFramework/appsettings.json > temp.json && mv temp.json TeamcityTestingFramework/appsettings.json

    - name: Cat appsettings.json
      shell: bash
      run: cat TeamcityTestingFramework/appsettings.json